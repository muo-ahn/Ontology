"""Shared pydantic models for the vLM → Neo4j → LLM evaluation pipeline."""

from __future__ import annotations

from datetime import datetime
from typing import Optional

from pydantic import BaseModel, Field


class FindingModel(BaseModel):
    """Structured representation of a vision finding."""

    id: str
    type: str
    location: Optional[str] = None
    size_cm: Optional[float] = Field(default=None, description="Approximate size in centimetres")
    conf: Optional[float] = Field(default=None, description="Model confidence between 0 and 1")


class ImageModel(BaseModel):
    """Metadata for an image node in the knowledge graph."""

    image_id: str
    path: str
    modality: Optional[str] = None


class ReportModel(BaseModel):
    """Summary text generated by a model about the image."""

    id: str
    text: str
    model: str
    conf: float
    ts: datetime


class KGUpsertRequest(BaseModel):
    """Payload used to upsert a Case → Image → Findings → Report bundle."""

    case_id: str
    image: ImageModel
    report: ReportModel
    findings: list[FindingModel] = Field(default_factory=list)
